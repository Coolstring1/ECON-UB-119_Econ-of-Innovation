operas <- operas %>%
mutate(pop = annals + amazon)
View(operas_pop)
View(operas)
p
operas$popular <- ifelse(is.na(operas$pop), NA, operas$pop)
operas$popular <- ifelse(operas$popular>0,1,0)
operas_pop2 <- operas %>% filter(title !='' & first_name !=''& popular==1) %>%
mutate(treated = state %in% c("lombardy", "venetia")) %>%
mutate(treated = as.numeric(treated)) %>%
group_by(year, state) %>%
summarise(operas_count = n())
View(operas_pop2)
operas_pop2 <- operas %>% filter(title !='' & (first_name !='' | last_name !='') & popular==1) %>%
mutate(treated = state %in% c("lombardy", "venetia")) %>%
mutate(treated = as.numeric(treated)) %>%
group_by(year, state) %>%
summarise(operas_count = n())
operas_fam2 <- merge(operas_template, operas_pop2,
by=c('year','state'),
all.x = TRUE)
operas_fam2 <- operas_fam2 %>% mutate( count_operas = replace_na(operas_count,0))%>%
mutate(post_treat = yr00_20*treated)
View(operas_fam2)
reg <- felm(operas_count ~ post_treat|
state +year| # two FEs? use a + to add them
0,
data=operas_fam)
summary(reg)
reg <- felm(count_operas ~ post_treat|
state +year| # two FEs? use a + to add them
0,
data=operas_fam)
summary(reg)
operas_pop2 <- operas %>% filter(title !='' & (first_name !='' | last_name != '') & popular==1) %>%
mutate(treated = state %in% c("lombardy", "venetia")) %>%
mutate(treated = as.numeric(treated)) %>%
group_by(year, state) %>%
summarise(operas_count = n())
operas_fam2 <- merge(operas_template, operas_pop2,
by=c('year','state'),
all.x = TRUE)
#3b
operas <- operas %>%
mutate(pop = annals + amazon)
operas$popular <- ifelse(is.na(operas$pop), NA, operas$pop)
operas$popular <- ifelse(operas$popular>0,1,0)
operas_pop2 <- operas %>% filter(title !='' & (first_name !='' | last_name != '') & popular==1) %>%
mutate(treated = state %in% c("lombardy", "venetia")) %>%
mutate(treated = as.numeric(treated)) %>%
group_by(year, state) %>%
summarise(operas_count = n())
operas_fam2 <- merge(operas_template, operas_pop2,
by=c('year','state'),
all.x = TRUE)
operas_fam2 <- operas_fam2 %>% mutate( count_operas = replace_na(operas_count,0))%>%
mutate(post_treat = yr00_20*treated)
reg2 <- felm(count_operas ~ post_treat|
state +year| # two FEs? use a + to add them
0,
data=operas_fam2)
summary(reg2)
#3c
reg3 <- felm(count_operas ~ post_treat + yr00_20 + post_treat|
0| # without 2 FE
0,
data=operas_fam)
summary(reg3)
huxreg(reg1, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01))
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01))
#3c
reg3 <- felm(count_operas ~ treated + yr00_20 + post_treat|
0| # without 2 FE
0,
data=operas_fam)
summary(reg3)
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01))#,
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"))#,
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) #%>%
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) %>%
add_rows(rbind(c("Year FE", "no", "no",'no','no'), #note! you need more "yes" if you have >3 models
c("Control group", "All workers",'All workers', "With PhD","All workers")),
copy_cell_props = FALSE,
after = c(nrow(.) - 3))# %>%
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) %>%
add_rows(rbind(c("Year FE", "no", "no"), #note! you need more "yes" if you have >3 models
c("Control group", "All workers",'All workers')),
copy_cell_props = FALSE,
after = c(nrow(.) - 3))# %>%
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) %>%
add_rows(rbind(c("Year FE", "no", "no",'no'), #note! you need more "yes" if you have >3 models
c("Control group", "All workers",'All workers', "With PhD",)),
copy_cell_props = FALSE,
after = c(nrow(.) - 3))# %>%
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) %>%
add_rows(rbind(c("Year FE", "no", "no",'no'), #note! you need more "yes" if you have >3 models
c("Control group", "All workers",'All workers', "With PhD")),
copy_cell_props = FALSE,
after = c(nrow(.) - 3))# %>%
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) %>%
add_rows(rbind(c("Year FE", "yes", "yes","no"), #note! you need more "yes" if you have >3 models
c("State FE", "yes","yes", "no")),
copy_cell_props = FALSE,
after = c(nrow(.) - 3))# %>%
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) %>%
add_rows(rbind(c("Year FE", "yes", "yes","no"), #note! you need more "yes" if you have >3 models
c("State FE", "yes","yes", "no"),
c("Sample", "All known", "All known and popular", "All known")),
copy_cell_props = FALSE,
after = c(nrow(.) - 3))# %>%
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) %>%
add_rows(rbind(c("Year FE", "yes", "yes","no"), #note! you need more "yes" if you have >3 models
c("State FE", "yes","yes", "no"),
c("Sample", "Known", "Known and popular", "Known")),
copy_cell_props = FALSE,
after = c(nrow(.) - 3))# %>%
huxreg(reg, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) %>%
add_rows(rbind(c("Year FE", "yes", "yes","no"), #note! you need more "yes" if you have >3 models
c("State FE", "yes","yes", "no"),
c("Sample", "Known", "Known & popular", "Known")),
copy_cell_props = FALSE,
after = c(nrow(.) - 3))# %>%
#3b
operas <- operas %>%
mutate(pop = annals + amazon)
operas$popular <- ifelse(is.na(operas$pop), NA, operas$pop)
operas_pop2_annals <- operas %>% filter(title !='' & (first_name !='' | last_name != '') & annals==1) %>%
mutate(treated = state %in% c("lombardy", "venetia")) %>%
mutate(treated = as.numeric(treated)) %>%
group_by(year, state) %>%
summarise(operas_count = n())
operas_fam2_annals <- merge(operas_template, operas_pop2_annals,
by=c('year','state'),
all.x = TRUE)
operas_fam2_annals <- operas_fam2_annals %>% mutate( count_operas = replace_na(operas_count,0))%>%
mutate(post_treat = yr00_20*treated)
reg2_annals <- felm(count_operas ~ post_treat|
state +year| # two FEs? use a + to add them
0,
data=operas_fam2_annals)
summary(reg2_annals)
operas_pop2_annals <- operas %>% filter(title !='' & (first_name !='' | last_name != '') & annals>=1) %>%
mutate(treated = state %in% c("lombardy", "venetia")) %>%
mutate(treated = as.numeric(treated)) %>%
group_by(year, state) %>%
summarise(operas_count = n())
operas_fam2_annals <- merge(operas_template, operas_pop2_annals,
by=c('year','state'),
all.x = TRUE)
operas_fam2_annals <- operas_fam2_annals %>% mutate( count_operas = replace_na(operas_count,0))%>%
mutate(post_treat = yr00_20*treated)
reg2_annals <- felm(count_operas ~ post_treat|
state +year| # two FEs? use a + to add them
0,
data=operas_fam2_annals)
summary(reg2_annals)
##regression with amazon popularity definition##
operas_pop2_amazon <- operas %>% filter(title !='' & (first_name !='' | last_name != '') & amazon==1) %>%
mutate(treated = state %in% c("lombardy", "venetia")) %>%
mutate(treated = as.numeric(treated)) %>%
group_by(year, state) %>%
summarise(operas_count = n())
operas_fam2_amazon <- merge(operas_template, operas_pop2_amazon,
by=c('year','state'),
all.x = TRUE)
operas_fam2_amazon <- operas_fam2_amazon %>% mutate( count_operas = replace_na(operas_count,0))%>%
mutate(post_treat = yr00_20*treated)
reg2_amazon <- felm(count_operas ~ post_treat|
state +year| # two FEs? use a + to add them
0,
data=operas_fam2_amazon)
summary(reg2_amazon)
View(operas_fam2_amazon)
View(reg2_annals)
View(operas_pop2_annals)
View(operas_fam2_annals)
##regression table
huxreg(reg, reg2_amazon, reg2_annals, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) %>%
add_rows(rbind(c("Year FE", "yes", "yes", "yes","yes", "no"), #note! you need more "yes" if you have >3 models
c("State FE", "yes","yes", "yes", "yes", "no"),
c("Sample", "Known", "Known & popular (amazon)", "Known & popular (annals)", "Known & popular (both)", "Known")),
copy_cell_props = FALSE,
after = c(nrow(.) - 3))# %>%
##regression table
huxreg(reg, reg2_amazon, reg2_annals, reg2, reg3,
stars = c(`*` = 0.1, `**` = 0.05, `***` = 0.01),
coefs = c("Treated X post-1801" = "post_treat", # rename vars to smthing pretty
"Post-1801" = "yr00_20",
"Treated" = "treated"),
statistics = c("N" = "nobs",
"R^2" = "r.squared")) %>%
add_rows(rbind(c("Year FE", "yes", "yes", "yes","yes", "no"), #note! you need more "yes" if you have >3 models
c("State FE", "yes","yes", "yes", "yes", "no"),
c("Sample", "Known", "Known & popular (amazon)", "Known & popular (annals)", "Known & popular (both)", "Known")),
copy_cell_props = FALSE,
after = c(nrow(.) - 3)) %>%
quick_docx("report_reg.docx")
View(final_table1)
library(xlsx)
View(opera_total_table)
operas_table <- operas %>%
filter(year %in% 1781:1820) %>% #drop the 1821 operas
mutate(yr00_20 = as.numeric(year>=1801), #year is above 1801
treated = as.numeric(state %in% c("lombardy", "venetia"))) %>%
group_by(yr00_20, treated) %>%
summarise(operas_count = n(),
regions = n_distinct(state),
length = n_distinct(year)) #%>%
View(operas_table)
operas_table <- operas %>%
filter(year %in% 1781:1820) %>% #drop the 1821 operas
mutate(yr00_20 = as.numeric(year>=1801), #year is above 1801
treated = as.numeric(state %in% c("lombardy", "venetia"))) %>%
group_by(yr00_20, treated) %>%
summarise(operas_count = n(),
regions = n_distinct(state),
length = n_distinct(year)) %>%
mutate(operas_peryar_perregion = operas_count/(regions*length)) %>%
select(treated, operas_peryar_perregion, yr00_20) %>%
spread(treated, operas_peryar_perregion)
View(operas)
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 6, height = 4, units = "in")
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 8, height = 6, units = "in")
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 6, height = 4.5, units = "in")
# Make two Time Series Graphs (figure 1B below, easy to change for Figure 2B)
ggplot(operas_w) +
geom_line(aes(x=year, y=mean_0, colour = "royalblue"), size = .8) +
geom_point(aes(x=year, y=mean_0, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year, y=mean_1, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year, y=mean_1, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1801, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1788, label="1801 Copyright Law", y=5.5),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("Operas in regions without copyright",
"Operas in regions with copyright"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Mean New Operas per Year") +
ggtitle("Figure 1 - Operas in Italian regions from 1780 to 1820") +
theme(legend.position = "right", legend.text = element_text(size = 10))
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 6, height = 4.5, units = "in")
# Make two Time Series Graphs (figure 1B below, easy to change for Figure 2B)
ggplot(operas_w) +
geom_line(aes(x=year, y=mean_0, colour = "royalblue"), size = .8) +
geom_point(aes(x=year, y=mean_0, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year, y=mean_1, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year, y=mean_1, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1801, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1788, label="1801 Copyright Law", y=5.5, size = 8),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("Operas in regions without copyright",
"Operas in regions with copyright"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Mean New Operas per Year") +
ggtitle("Figure 1 - Operas in Italian regions from 1780 to 1820") +
theme(legend.position = "right", legend.text = element_text(size = 10))
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 6, height = 4.5, units = "in")
# Make two Time Series Graphs (figure 1B below, easy to change for Figure 2B)
ggplot(operas_w) +
geom_line(aes(x=year, y=mean_0, colour = "royalblue"), size = .8) +
geom_point(aes(x=year, y=mean_0, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year, y=mean_1, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year, y=mean_1, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1801, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1788, label="1801 Copyright Law", y=5.5, size = 1),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("Operas in regions without copyright",
"Operas in regions with copyright"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Mean New Operas per Year") +
ggtitle("Figure 1 - Operas in Italian regions from 1780 to 1820") +
theme(legend.position = "right", legend.text = element_text(size = 10))
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 6, height = 4.5, units = "in")
# Make two Time Series Graphs (figure 1B below, easy to change for Figure 2B)
ggplot(operas_w) +
geom_line(aes(x=year, y=mean_0, colour = "royalblue"), size = .8) +
geom_point(aes(x=year, y=mean_0, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year, y=mean_1, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year, y=mean_1, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1801, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1788, label="1801 Copyright Law", y=5.5),
colour="black",
angle=0,
text=element_text(size=5)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("Operas in regions without copyright",
"Operas in regions with copyright"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Mean New Operas per Year") +
ggtitle("Figure 1 - Operas in Italian regions from 1780 to 1820") +
theme(legend.position = "right", legend.text = element_text(size = 10))
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 6, height = 4.5, units = "in")
# Make two Time Series Graphs (figure 1B below, easy to change for Figure 2B)
ggplot(operas_w) +
geom_line(aes(x=year, y=mean_0, colour = "royalblue"), size = .8) +
geom_point(aes(x=year, y=mean_0, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year, y=mean_1, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year, y=mean_1, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1801, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1788, label="1801 Copyright Law", y=5.5),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("Operas in regions without copyright",
"Operas in regions with copyright"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Mean New Operas per Year") +
ggtitle("Figure 1 - Operas in Italian regions from 1780 to 1820") +
theme(legend.position = "right", legend.text = element_text(size = 10))
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 7, height = 5, units = "in")
# Make two Time Series Graphs (figure 1B below, easy to change for Figure 2B)
ggplot(operas_w) +
geom_line(aes(x=year, y=mean_0, colour = "royalblue"), size = .8) +
geom_point(aes(x=year, y=mean_0, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year, y=mean_1, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year, y=mean_1, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1801, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1792, label="1801 Copyright Law", y=5.5),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("Operas in regions without copyright",
"Operas in regions with copyright"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Mean New Operas per Year") +
ggtitle("Figure 1 - Operas in Italian regions from 1780 to 1820") +
theme(legend.position = "right", legend.text = element_text(size = 10))
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 7, height = 5, units = "in")
# Make two Time Series Graphs (figure 1B below, easy to change for Figure 2B)
ggplot(operas_w) +
geom_line(aes(x=year, y=mean_0, colour = "royalblue"), size = .8) +
geom_point(aes(x=year, y=mean_0, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year, y=mean_1, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year, y=mean_1, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1801, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1794, label="1801 Copyright Law", y=5.5),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("Operas in regions without copyright",
"Operas in regions with copyright"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Mean New Operas per Year") +
ggtitle("Figure 1 - Operas in Italian regions from 1780 to 1820") +
theme(legend.position = "right", legend.text = element_text(size = 10))
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 8, height = 6, units = "in")
# Make two Time Series Graphs (figure 1B below, easy to change for Figure 2B)
ggplot(operas_w) +
geom_line(aes(x=year, y=mean_0, colour = "royalblue"), size = .8) +
geom_point(aes(x=year, y=mean_0, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year, y=mean_1, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year, y=mean_1, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1801, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1794, label="1801 Copyright Law", y=5.5),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("Operas in non-copyright regions",
"Operas in copyright regions"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Mean New Operas per Year") +
ggtitle("Figure 1 - Operas in Italian regions from 1780 to 1820") +
theme(legend.position = "right", legend.text = element_text(size = 10))
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 8, height = 6, units = "in")
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 8, height = 8, units = "in")
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 8, height = 4, units = "in")
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 8, height = 5, units = "in")
