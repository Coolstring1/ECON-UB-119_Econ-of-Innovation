library(tidyverse)
library(huxtable)
library(haven) # to read .dta files
library(gridExtra)
library(lfe) # to run fixed effect models
rm(list = ls())
###
his <- books %>%
filter(brp==1)%>%
group_by(id)%>%
summarise(total_cite = sum(cit_year))
his %>%
ggplot( aes(x=total_cite)) +
geom_histogram( binwidth=5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 5") +
theme(
plot.title = element_text(size=15)
)
###cutoff greater than 200 citations and make a note in write up
his1 <- books %>%
filter(brp==1, year_c >1942)%>%
group_by(id)%>%
summarise(total_cite = sum(cit_year))
his1 %>%
ggplot( aes(x=total_cite)) +
geom_histogram( binwidth=5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 5") +
theme(
plot.title = element_text(size=15)
)
# explore the data before you do things! This looks at the cities where books are published
# You observe each book in many years. Let's keep only one observation/book and learn
# about the books we have
books_summary <- books %>%
# this will only keep the first observation of each book (books are indexed by id).
# The exact year depends on how the data is sorted
distinct(id, .keep_all = TRUE) %>% #.keep_all means "keep variables other than id"
group_by(field, brp) %>%
summarize(number_books = n()) %>%
mutate(brp = recode(brp,  `0` = "non_BRP", `1` = "BRP"))
setwd("~/My Work/Programming Projects/R/Econ of Innovation/ECON-UB-119_Econ-of-Innovation/(06) BooksRepublication")
###
his <- books %>%
filter(brp==1)%>%
group_by(id)%>%
summarise(total_cite = sum(cit_year))
books <- read_stata("books_all.dta")
###
his <- books %>%
filter(brp==1)%>%
group_by(id)%>%
summarise(total_cite = sum(cit_year))
his %>%
ggplot( aes(x=total_cite)) +
geom_histogram( binwidth=5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 5") +
theme(
plot.title = element_text(size=15)
)
###cutoff greater than 200 citations and make a note in write up
his1 <- books %>%
filter(brp==1, year_c >1942)%>%
group_by(id)%>%
summarise(total_cite = sum(cit_year))
his1 %>%
ggplot( aes(x=total_cite)) +
geom_histogram( binwidth=5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 5") +
theme(
plot.title = element_text(size=15)
)
# explore the data before you do things! This looks at the cities where books are published
# You observe each book in many years. Let's keep only one observation/book and learn
# about the books we have
books_summary <- books %>%
# this will only keep the first observation of each book (books are indexed by id).
# The exact year depends on how the data is sorted
distinct(id, .keep_all = TRUE) %>% #.keep_all means "keep variables other than id"
group_by(field, brp) %>%
summarize(number_books = n()) %>%
mutate(brp = recode(brp,  `0` = "non_BRP", `1` = "BRP"))
View(books)
library(tidyverse)
library(huxtable)
library(haven) # to read .dta files
library(gridExtra)
library(lfe) # to run fixed effect models
rm(list = ls())
books <- read_stata("books_all.dta")
###
his <- books %>%
filter(brp==1)%>%
group_by(id)%>%
summarise(total_cite = sum(cit_year))
his %>%
ggplot( aes(x=total_cite)) +
geom_histogram( binwidth=5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 5") +
theme(
plot.title = element_text(size=15)
)
###cutoff greater than 200 citations and make a note in write up
his1 <- books %>%
filter(brp==1, year_c >1942)%>%
group_by(id)%>%
summarise(total_cite = sum(cit_year))
his1 %>%
ggplot( aes(x=total_cite)) +
geom_histogram( binwidth=5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 5") +
theme(
plot.title = element_text(size=15)
)
# explore the data before you do things! This looks at the cities where books are published
# You observe each book in many years. Let's keep only one observation/book and learn
# about the books we have
books_summary <- books %>%
# this will only keep the first observation of each book (books are indexed by id).
# The exact year depends on how the data is sorted
distinct(id, .keep_all = TRUE) %>% #.keep_all means "keep variables other than id"
group_by(field, brp) %>%
summarize(number_books = n()) %>%
mutate(brp = recode(brp,  `0` = "non_BRP", `1` = "BRP"))
### Question 3
# Using our summary, let's only keep the BRP books in the fields that have at least 2
# non-BRP books
fields_nonBRP <- books_summary %>%
spread(brp, number_books) %>%#the new reshape that you should learn
filter(non_BRP>=2) %>%
mutate(indic_non_brp_field = 1) # you will see why I created this
# we now have 27 fields that have at lest 2 non-BRP books in them. Merge
# to the original dataset
books <- merge(books, fields_nonBRP,
by = c("field"),
all.x = TRUE)
books_comparable <- books %>% filter(indic_non_brp_field ==1)
##Comparing Citations to the same BRP Book by English-language and Other Authors
regr_table <- books %>%
filter(brp == 1)%>%
group_by(year_c,id) %>%
summarise(Eng = sum(count_eng),
Other = sum(count_noeng))
reg_table1<- regr_table %>%
group_by(year_c) %>%
summarise(Eng = sum(Eng)/n(),
Other = sum(Other)/n()) %>%
filter(year_c>=1930)
ggplot(reg_table1) +
geom_line(aes(x=year_c, y=Eng, colour = "royalblue"), size = .8) +
geom_point(aes(x=year_c, y=Eng, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year_c, y=Other, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year_c, y=Other, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1942, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1938, label="BRP", y=0.8),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("English",
"Other"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Citations per book and year") +
ggtitle("Figure 1 - Citation BRP Books in English verses Other languages") +
theme(legend.position = "right", legend.text = element_text(size = 10))
books_summary <- books %>%
# this will only keep the first observation of each book (books are indexed by id).
# The exact year depends on how the data is sorted
distinct(id, .keep_all = TRUE) %>% #.keep_all means "keep variables other than id"
group_by(field, brp) %>%
summarize(number_books = n()) %>%
mutate(brp = recode(brp,  `0` = "non_BRP", `1` = "BRP"))
books_summary1 <- books_summary %>%
group_by(brp)%>%
summarise(total = sum(number_books))
##histograms
his <- books %>%
filter(brp==1)%>%
group_by(id)%>%
summarise(total_cite = sum(cit_year))
his %>%
ggplot( aes(x=total_cite)) +
geom_histogram( binwidth=5, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Bin size = 5") +
theme(
plot.title = element_text(size=15)
)
###cutoff greater than 200 citations and make a note in write up
his1 <- books %>%
filter(brp==1, year_c >1942)%>%
group_by(id)%>%
summarise(total_cite = sum(cit_year))
##Comparing Citations to the same BRP Book by English-language and Other Authors
regr_table <- books %>%
filter(brp == 1)%>%
group_by(year_c,id) %>%
summarise(Eng = sum(count_eng),
Other = sum(count_noeng))
reg_table1<- regr_table %>%
group_by(year_c) %>%
summarise(Eng = sum(Eng)/n(),
Other = sum(Other)/n()) %>%
filter(year_c>=1930)
ggplot(reg_table1) +
geom_line(aes(x=year_c, y=Eng, colour = "royalblue"), size = .8) +
geom_point(aes(x=year_c, y=Eng, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year_c, y=Other, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year_c, y=Other, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1942, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1938, label="BRP", y=0.8),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("English",
"Other"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Citations per book and year") +
ggtitle("Figure 1 - Citation BRP Books in English verses Other languages") +
theme(legend.position = "right", legend.text = element_text(size = 10))
fields_nonBRP <- books_summary %>%
spread(brp, number_books) %>%#the new reshape that you should learn
filter(non_BRP>=2) %>%
mutate(indic_non_brp_field = 1) # you will see why I created this
# we now have 27 fields that have at lest 2 non-BRP books in them. Merge
# to the original dataset
books <- merge(books, fields_nonBRP,
by = c("field"),
all.x = TRUE)
books_comparable <- books %>% filter(indic_non_brp_field ==1)
regr_table2 <- books_comparable %>%
filter(chemistry==1|mathematics==1 & diss ==0)%>%
group_by(year_c,brp,id)%>%
summarise(Eng = sum(count_eng))
test <- regr_table2 %>%
group_by(brp)%>%
summarise(n = n())
regr_table2_1 <- regr_table2 %>%
group_by(year_c,brp) %>%
summarise(cit = sum(Eng)/n())
regr_table2_w <- reshape(as.data.frame(regr_table2_1),
idvar = c("year_c"), # which var is id
direction = "wide", # how you want things reshaped
timevar = "brp",  # which var is repeating
sep = "_") %>%
filter(year_c>=1930)
ggplot(regr_table2_w) +
geom_line(aes(x=year_c, y=cit_0, colour = "royalblue"), size = .8) +
geom_point(aes(x=year_c, y=cit_0, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year_c, y=cit_1, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year_c, y=cit_1, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1942, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1938, label="BRP", y=0.8),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("Swiss",
"BRP"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Citations per book and year") +
ggtitle("Figure 2 - Citation BRP Books and Swiss Book") +
theme(legend.position = "right", legend.text = element_text(size = 10))
View(books_comparable)
help(mahalanobis)
knn <- books %>%
group_by(id,field) %>%
summarise(cite = sum(count_eng) + sum(count_noeng))
knn <- knn%>%
filter(field!='')
knn <- knn %>%
mutate(v = 1, fie = field) %>%
spread(fie, v, fill = 0)
normalize <- function(x){
return ((x-min(x)) / (max(x)-min(x)))
}
subset <- as.data.frame(lapply(knn[,3:36],normalize))
set.seed(0)
mahalanobis(subset, colMeans(subset), cov(subset))
View(subset)
View(subset)
View(knn)
colMeans(subset)
cov(subset)
View(subset)
setwd("~/My Work/Programming Projects/R/Econ of Innovation/ECON-UB-119_Econ-of-Innovation/(05) ItalianOperas")
## Petra Moser & Vasily Rusanov
## Data lab #5
## Giorcelli, Michela and Moser, Petra, Copyrights and Creativity:
## Evidence from Italian Operas (December 28, 2016).
## Available at SSRN: https://ssrn.com/abstract=2505776
## published version: https://www.journals.uchicago.edu/doi/abs/10.1086/710534
library(tidyverse)
library(huxtable)
library(haven) # to read .dta files
library(gridExtra)
library(lfe) # to run fixed effect models
rm(list = ls())
#########
# Part 1: figure
#########
# Import the data
# The file 20years.dta has *all*  the operas created in 1781-1821 (even if the composer
# and/or the name is unknown).
operas <- read_stata("20years.dta")  # read_dta is used for .dta files
#let's look at the different regions in italy
print(unique(operas$state))
operas_c <- operas %>% mutate(treated = state %in% c("lombardy", "venetia")) %>%
mutate(treated = as.numeric(treated)) %>%
group_by(year, treated) %>%
summarise(operas_count = n(),
regions = n_distinct(state))
### GRAPH ###
# reshape data to wide to make graphs
operas_w <- reshape(as.data.frame(operas_c),
idvar = "year", # which var is id
direction = "wide", # how you want things reshaped
timevar = "treated",  # which var is repeating
sep = "_")
operas_w <- operas_w %>% mutate(mean_0 = operas_count_0/regions_0,
mean_1 = operas_count_1/regions_1)
# Make two Time Series Graphs (figure 1B below, easy to change for Figure 2B)
ggplot(operas_w) +
geom_line(aes(x=year, y=mean_0, colour = "royalblue"), size = .8) +
geom_point(aes(x=year, y=mean_0, colour = "royalblue"), size = 1.2) +
geom_line(aes(x=year, y=mean_1, colour = "darkorange2"), size = .8) +
geom_point(aes(x=year, y=mean_1, colour = "darkorange2"), size = 1.2) +
geom_vline(xintercept = 1801, linetype = "dashed", size = 0.75) +
geom_text(aes(x=1794, label="1801 Copyright Law", y=5.5),
colour="black",
angle=0,
text=element_text(size=10)) +
scale_color_identity(name = "",
breaks = c("royalblue", "darkorange2"),
labels = c("Operas in non-copyright regions",
"Operas in copyright regions"),
guide = "legend") +
theme_bw() +
xlab("Year") +
ylab("Mean New Operas per Year") +
ggtitle("Figure 1 - Operas in Italian regions from 1780 to 1820") +
theme(legend.position = "right", legend.text = element_text(size = 10))
# ggsave() is a nice and reproducible way to save graph. Png is a good format.
# you can make the aspect ration different by chaning width and height
ggsave(paste0("figure1.png"),
width = 8, height = 5, units = "in")
operas_table <- operas %>%
filter(year %in% 1781:1820) %>% #drop the 1821 operas
mutate(yr00_20 = as.numeric(year>=1801), #year is above 1801
treated = as.numeric(state %in% c("lombardy", "venetia"))) %>%
group_by(yr00_20, treated) %>%
summarise(operas_count = n(),
regions = n_distinct(state),
length = n_distinct(year)) %>%
mutate(operas_peryar_perregion = operas_count/(regions*length)) %>%
select(treated, operas_peryar_perregion, yr00_20) %>%
spread(treated, operas_peryar_perregion)
opera_total_table <- operas %>%
filter(year %in% 1781:1820) %>%
mutate(treated = as.numeric(state %in% c("lombardy", "venetia"))) %>%
group_by(treated)%>%
summarise(operas_count = n(),
regions = n_distinct(state),
length = n_distinct(year)) %>%
mutate(operas_peryar_perregion = operas_count/(regions*length)) %>%
select(treated, operas_peryar_perregion) %>%
spread(treated, operas_peryar_perregion) %>%
mutate(yr00_20=2)
table1_part1 <- rbind(opera_total_table , operas_table)
operas_table2 <- operas %>%
filter(year %in% 1781:1820 & annals == 1) %>%
mutate(yr00_20 = as.numeric(year>=1801), #year is above 1801
treated = as.numeric(state %in% c("lombardy", "venetia"))) %>%
group_by(yr00_20, treated) %>%
summarise(operas_count = n()) %>%
mutate(regions = ifelse(treated==0, 6, 2),
length = 20,
operas_peryar_perregion = operas_count/(regions*length)) %>%
select(treated, operas_peryar_perregion, yr00_20) %>%
spread(treated, operas_peryar_perregion)
opera_total_table2 <- operas %>%
filter(year %in% 1781:1820 & annals == 1) %>%
mutate(treated = as.numeric(state %in% c("lombardy", "venetia"))) %>%
group_by(treated)%>%
summarise(operas_count = n()) %>%
mutate(regions = ifelse(treated==0, 6, 2),
length = 40) %>%
mutate(operas_peryar_perregion = operas_count/(regions*length)) %>%
select(treated, operas_peryar_perregion) %>%
spread(treated, operas_peryar_perregion) %>%
mutate(yr00_20=2)
table1_part2 <- rbind(opera_total_table2 , operas_table2)
operas_table3 <- operas %>%
filter(year %in% 1781:1820 & amazon == 1) %>%
mutate(yr00_20 = as.numeric(year>=1801), #year is above 1801
treated = as.numeric(state %in% c("lombardy", "venetia"))) %>%
group_by(yr00_20, treated) %>%
summarise(operas_count = n()) %>%
mutate(regions = ifelse(treated==0, 6, 2),
length = 20,
operas_peryar_perregion = operas_count/(regions*length)) %>%
select(treated, operas_peryar_perregion, yr00_20) %>%
spread(treated, operas_peryar_perregion)
opera_total_table3 <- operas %>%
filter(year %in% 1781:1820 & amazon == 1) %>%
mutate(treated = as.numeric(state %in% c("lombardy", "venetia"))) %>%
group_by(treated)%>%
summarise(operas_count = n()) %>%
mutate(regions = ifelse(treated==0, 6, 2),
length = 40) %>%
mutate(operas_peryar_perregion = operas_count/(regions*length)) %>%
select(treated, operas_peryar_perregion) %>%
spread(treated, operas_peryar_perregion) %>%
mutate(yr00_20=2)
table1_part3 <- rbind(opera_total_table3 , operas_table3)
final_table1 <- rbind(table1_part1,table1_part2,table1_part3)
final_table1 = final_table1[c(3,2,1)]
final_table1 <- final_table1 %>% rename("Years" = yr00_20, "Other States" = "0", "Venetia and Lombardy" = "1")
final_table1$Years[final_table1$Years == 2] <- "1781-1820"
final_table1$Years[final_table1$Years == 0] <- "1781-1800"
final_table1$Years[final_table1$Years == 1] <- "1801-1820"
final_table1 <- final_table1 %>% mutate(across(where(is.numeric), ~ round(., 3)))
# 2c popular operas
popular_opera <- operas %>%
mutate(popular = annals + amazon) %>%
filter(year %in% 1781:1820 & popular > 0)
popular_opera_total = length(popular_opera$popular)
popular_opera_amazon = length(popular_opera$popular[popular_opera$amazon == 1 & popular_opera$annals == 0])
popular_opera_annal = length(popular_opera$popular[popular_opera$annals == 1 & popular_opera$amazon == 0])
popular_opera_both = length(popular_opera$popular[popular_opera$amazon == 1 & popular_opera$annals == 1])
#########
# Part 3: regressions
#########
operas_forreg <- operas %>%
filter(year %in% 1781:1820) %>% #drop the 1821 operas
mutate(yr00_20 = as.numeric(year>=1801), #year is above 1801
treated = as.numeric(state %in% c("lombardy", "venetia"))) %>%
group_by(year, yr00_20, treated, state) %>%
summarise(operas_count = n(),
regions = n_distinct(state),
length = n_distinct(year)) %>%
mutate(operas_peryar_perregion = operas_count/(regions*length),
post_treat = yr00_20*treated)
operas_template <- operas_forreg %>%select(year,state)
operas_pop <- operas %>% filter(title !='' & first_name !='') %>%
mutate(treated = state %in% c("lombardy", "venetia")) %>%
mutate(treated = as.numeric(treated)) %>%
group_by(year, state) %>%
summarise(operas_count = n())
operas_fam <- merge(operas_template, operas_pop,
by=c('year','state'),
all.x = TRUE)
operas_fam <- operas_fam %>% mutate( count_operas = replace_na(operas_count,0))%>%
mutate(post_treat = yr00_20*treated)
View(operas_fam)
